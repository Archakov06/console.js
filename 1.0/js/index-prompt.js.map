{"version":3,"sources":["node_modules/acorn/dist/acorn.js","node_modules/misbehave/misbehave.js","node_modules/prismjs/components/prism-core.js","node_modules/prismjs/components/prism-clike.js","node_modules/prismjs/components/prism-javascript.js","js/utils.js","js/abstract-view.js","js/prompt/prompt-view.js","js/prompt/prompt.js","js/index-prompt.js"],"names":["exports","reservedWords","3","5","6","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","code","set","pos","i","length","isIdentifierStart","astral","test","String","fromCharCode","isIdentifierChar","TokenType","label","conf","this","keyword","beforeExpr","startsExpr","isLoop","isAssign","prefix","postfix","binop","updateContext","name","prec","keywords$1","kw","options","types","num","regexp","string","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_super","_class","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","isNewLine","ecma2019String","nonASCIIwhitespace","skipWhiteSpace","ref","Object","prototype","hasOwnProperty","toString","has","obj","propName","call","isArray","Array","Position","line","col","column","SourceLocation","p","start","end","sourceFile","getLineInfo","input","offset","cur","lastIndex","match","exec","index","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","n","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","locations","onToken","onComment","ranges","program","directSourceFile","preserveParens","plugins","getOptions","opts","array","opt","tokens","token","push","block","text","startLoc","endLoc","comment","type","value","loc","range","keywordRegexp","words","replace","Parser","startPos","reserved","v","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","loadPlugins","lineStart","lastIndexOf","curLine","slice","split","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","skipLineComment","scopeStack","enterFunctionScope","regexpState","isKeyword","word","isReservedWord","extend","f","pluginConfigs","plugin","Error","parse","node","startNode","nextToken","parseTopLevel","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","next","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","expression","pp$1","body","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","charCodeAt","ident","isAsyncFunction","charAt","declaration","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseExpression","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","pop","parseParenExpression","awaitAt","enterLexicalScope","parseFor","init$1","parseVar","declarations","init","await","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","consequent","alternate","argument","this$1","discriminant","cases","sawDefault","isCase","exitLexicalScope","empty","handler","clause","param","parseBindingAtom","finalizer","object","i$1","list","label$1","statementStart","generator","createNewLexicalScope","update","id","left","right","parseMaybeAssign","isFor","decl","parseVarId","isStatement","allowExpressionBody","initFunction","async","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","member","parseClassMember","method","tryContextual","k","noLineBreak","key","computed","startNodeAt","static","isGenerator","parsePropertyName","parseClassMethod","parseMethod","superClass","parseExprSubscripts","parseExprAtom","checkExport","fNode","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","prop","list$1","elements","elt","decls","nodes","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","raw","statement","pp$2","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","other","get","noIn","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","result","parseSubscripts","base","noCalls","maybeAsyncArrow","property","parseExprList","parseArrowExpression","callee","arguments","tag","quasi","parseTemplate","isTagged","canBeArrow","parseLiteral","regex","pattern","flags","parseParenAndDistinguishExpression","parseNew","val","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","item","empty$1","meta","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","indexOf","re","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$5","target","sources","len","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","Node","parser","pp$6","TokContext","isExpr","preserveSpace","override","types$1","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","parent","curContext","inGeneratorContext","out","statementParens","allowed","data","$LONE","General_Category","Script","apply","gc","sc","Script_Extensions","scx","pp$9","RegExpValidationState","validFlags","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp$8","codePointToString","getToken","Symbol","iterator","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","str","escaped","inClass","flagsStart","readWord1","e","readInt","radix","total","Infinity","startsWithDot","octal","parseInt","parseFloat","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","substr","escStart","esc","version","parseExpressionAt","tokenizer","addLooseExports","Parser$$1","plugins$$1","parse_dammit","LooseParser","pluginsLoose","tokTypes","keywordTypes","tokContexts","defineProperty","factory","module","createCommonjsModule","fn","bind","keys","callback","action","bindMultiple","combinations","j","bindSingle","unbind","trigger","directMap","callbacks","stopCallback","element","className","tagName","toLowerCase","isContentEditable","isModifier","handleKey","character","modifiers","isModifier$$1","ignoreThisKeypress","self","doNotReset","maxLevel","processedSequenceCallback","getMatches","seq","Math","level","fireCallback","combo","ignoreNextKeypress","nextExpectedAction","resetSequences","domEvent","on","on_1","off_1","event","capture","removeEventListener","detachEvent","addEventListener","attachEvent","off","specialKeysMap","8","9","13","16","17","18","20","27","32","33","34","35","36","37","38","39","40","45","46","91","93","187","189","224","specialCharactersMap","106","107","109","110","111","186","188","190","191","192","219","220","221","222","characterFromEvent","SPECIAL_KEYS_MAP","SPECIAL_CHARACTERS_MAP","which","shiftKey","eventModifiers","altKey","ctrlKey","metaKey","addEvents","eventHandler","eventModifiers$$1","keyCode","ignoreNextKeyup","combination","sequenceName","info","sequence","bindSequence","getKeyInfo","specialAliases","option","command","return","escape","mod","navigator","platform","shiftMap","~","!","@","#","$","%","^","&","*","(",")","_","+",":","\"","<",">","?","|","SPECIAL_ALIASES","SHIFT_MAP","pickBestAction","getReverseMap","constructor","REVERSE_MAP","modifiersMatch","modifiers1","modifiers2","sort","join","modifiersMatch$$1","matches","anyCharCallbacks","forEach","sequenceLevels","deleteCombo","deleteSequence","splice","activeSequences","srcElement","preventDefault","returnValue","stopPropagation","cancelBubble","increaseSequence","nextAction","resetSequenceTimer","callbackAndReset","characterFromEvent$$1","setTimeout","isFinal","wrappedCallback","clearTimeout","resetTimer","off$1","detach","reset$2","instances","combokeys","Combokeys","undomanager","UndoManager","execute","commands","limit","isExecuting","add","from","to","setCallback","callbackFunc","undo","redo","clear","prev_size","hasUndo","hasRedo","getCommands","getIndex","setLimit","window","getSections","sel","tempRange","selected","suffix","document","activeElement","textContent","getSelection","rangeCount","getRangeAt","createRange","collapse","selectNodeContents","setEnd","startContainer","startOffset","setStart","endContainer","endOffset","selection","createTextRange","moveToElementText","setEndPoint","getTextNodesIn","textNodes","nodeType","children","childNodes","allNewLines","onNewLine","leadingWhitespace","allCharacters","removeIfStartsWith","startsWith","Editable","autoIndent","autoOpen","autoStrip","overwrite","softTabs","replaceTab","pairs","oninput","undoLimit","ta","behavior","store","editable","createElement","repeat","undoMgr","setDom","content","endCharCount","textNode","foundStart","charCount","removeAllRanges","addRange","textRange","moveEnd","moveStart","select","setSelection","previous","isCollapsed","testAutoStrip","fnAutoOpen","opening","closing","fnOverwrite","testOverwrite","tabIndent","tabUnindent","inputListener","destroy","focus","blur","newLine","tab","prevLine","prefEnd","suffStart","whitespace","prefLines","concat","lines","endsWith","prevLength","map","StrUtil","args","Editable$$1","Misbehave","__proto__","create","_self","WorkerGlobalScope","Prism","lang","uniqueId","manual","disableWorkerMessageHandler","util","encode","alias","o","objId","clone","visited","languages","redef","insertBefore","inside","before","insert","root","grammar","newToken","ret","DFS","highlightAll","highlightAllUnder","container","env","selector","hooks","run","querySelectorAll","highlightElement","language","parentNode","nodeName","Worker","worker","filename","onmessage","evt","highlightedCode","innerHTML","postMessage","JSON","stringify","immediateClose","highlight","tokenize","matchGrammar","strarr","oneshot","patterns","greedy","lookbehindLength","global","delNum","after","wrapped","all","matchedStr","classes","attributes","aliases","script","currentScript","getElementsByTagName","src","hasAttribute","readyState","requestAnimationFrame","clike","class-name","punctuation","boolean","function","number","javascript","function-variable","constant","template-string","interpolation","interpolation-punctuation","markup","js","AbstractView","_classCallCheck","htmlMarkup","div","firstElementChild","_el","_render","_bind","emtyRE","PromptView","isMobile","_possibleConstructorReturn","_getPrototypeOf","_isMobile","_text","_allowSend","_scriptsEl","el","querySelector","_inputEl","_sendBtnEl","_handleSendClick","_handleKeyDown","_handleMouseDown","editor","_handleMisbehaveInput","innerText","_send","onSend","_this2","cb","undefined","blob","Blob","URL","createObjectURL","onload","removeChild","appendChild","offsetHeight","Prompt","consoleGlobalName","HTMLElement","TypeError","_container","_consGlobalName","userAgent","_view","_handleSend","_params","highlightedMarkup","lastExpressionStatementNode","editedCode","acorn","leftStrPart","substring","rightStrPart","exprStrPart","prompt","createScriptFromCodeAndAppend","height"],"mappings":"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QyG,MAEb7R,KAAKoL,QAAQhC,KAAK2X,GAAQM,QAC9BrhB,KAAKsL,aAAc,GAGrBvK,EAAMmC,KAAKzC,cAAgB,SAASohB,GAClC,GAAIA,IAAa9gB,EAAMgD,UAAW,CAChC,IAAI2D,EAAQ1H,KAAKoL,QAAQ9L,OAAS,EAC9BU,KAAKoL,QAAQ1D,KAAWqZ,GAAQS,OAChCxhB,KAAKoL,QAAQ1D,GAASqZ,GAAQU,WAE9BzhB,KAAKoL,QAAQ1D,GAASqZ,GAAQW,MAEpC1hB,KAAKsL,aAAc,GAGrBvK,EAAML,KAAKD,cAAgB,SAASohB,GAClC,IAAIM,GAAU,EACkB,GAA5BniB,KAAKc,QAAQ8G,cACI,OAAf5H,KAAK2J,QAAmB3J,KAAKsL,aACd,UAAftL,KAAK2J,OAAqB3J,KAAKgiB,wBAC/BG,GAAU,GAEhBniB,KAAKsL,YAAc6W,GAGrB,IAAIC,GAAO,CACTC,MAAS,CACP,QACA,kBACA,OACA,aACA,QACA,MACA,WACA,eACA,SACA,gBACA,SACA,iBACA,KACA,QACA,0BACA,OACA,0BACA,OACA,0BACA,MACA,+BACA,QACA,0BACA,MACA,0BACA,MACA,OACA,+BACA,KACA,aACA,MACA,YACA,MACA,QACA,kBACA,iBACA,sBACA,qBACA,WACA,MACA,gBACA,UACA,kBACA,SACA,YACA,MACA,sBACA,OACA,uBACA,OACA,cACA,MACA,WACA,MACA,cACA,OACA,eACA,SACA,0BACA,MACA,YACA,QACA,OACA,0BACA,QACA,iBACA,UACA,sBACA,SACA,iBACA,QACA,UACA,qBACA,KACA,oBACA,QACA,cACA,KACA,uBACA,OACA,oBACA,QACA,YACA,QACA,qBACA,KACA,cACA,QACA,eACA,OACA,YACA,QAEFC,iBAAoB,CAClB,eACA,KACA,oBACA,KACA,wBACA,KACA,UACA,KACA,QACA,kBACA,KACA,mBACA,KACA,iBACA,KACA,QACA,iBACA,KACA,oBACA,KACA,SACA,KACA,sBACA,KACA,SACA,IACA,gBACA,KACA,iBACA,KACA,mBACA,KACA,OACA,IACA,iBACA,cACA,KACA,kBACA,KACA,kBACA,KACA,kBACA,KACA,SACA,IACA,mBACA,KACA,QACA,IACA,eACA,KACA,eACA,KACA,oBACA,KACA,eACA,KACA,sBACA,KACA,cACA,KACA,cACA,IACA,QACA,YACA,IACA,kBACA,KACA,eACA,KACA,YACA,KACA,SACA,IACA,mBACA,KACA,aACA,KACA,mBACA,MAEFC,OAAU,CACR,QACA,OACA,OACA,wBACA,OACA,SACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,YACA,OACA,QACA,OACA,UACA,OACA,YACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,sBACA,OACA,SACA,OACA,qBACA,OACA,SACA,OACA,OACA,WACA,OACA,SACA,OACA,SACA,OACA,OACA,YACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,aACA,OACA,WACA,OACA,uBACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,SACA,OACA,UACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,mBACA,OACA,YACA,OACA,OACA,wBACA,OACA,yBACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,QACA,OACA,SACA,OACA,YACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,YACA,OACA,UACA,OACA,aACA,OACA,UACA,OACA,gBACA,OACA,eACA,OACA,gBACA,OACA,mBACA,OACA,uBACA,OACA,OACA,OACA,OACA,YACA,OACA,MACA,OACA,UACA,OACA,UACA,OACA,YACA,OACA,cACA,OACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,WACA,OACA,gBACA,OACA,aACA,OACA,oBACA,OACA,aACA,OAC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","file":"index-prompt.js","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.acorn = {})));\n}(this, (function (exports) { 'use strict';\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh === 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (!declaration) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.inAsync && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.type === types._function);\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      this.enterLexicalScope();\n      this.checkLVal(clause.param, \"let\");\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterLexicalScope();\n    }\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type === \"ClassDeclaration\" ||\n      node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" ||\n      node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type !== types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var member = this$1.parseClassMember(classBody);\n    if (member && member.type === \"MethodDefinition\" && member.kind === \"constructor\") {\n      if (hadConstructor) { this$1.raise(member.start, \"Duplicate constructor in the same class\"); }\n      hadConstructor = true;\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMember = function(classBody) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(classBody, method, isGenerator, isAsync);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\nvar data = {\n  \"$LONE\": [\n    \"ASCII\",\n    \"ASCII_Hex_Digit\",\n    \"AHex\",\n    \"Alphabetic\",\n    \"Alpha\",\n    \"Any\",\n    \"Assigned\",\n    \"Bidi_Control\",\n    \"Bidi_C\",\n    \"Bidi_Mirrored\",\n    \"Bidi_M\",\n    \"Case_Ignorable\",\n    \"CI\",\n    \"Cased\",\n    \"Changes_When_Casefolded\",\n    \"CWCF\",\n    \"Changes_When_Casemapped\",\n    \"CWCM\",\n    \"Changes_When_Lowercased\",\n    \"CWL\",\n    \"Changes_When_NFKC_Casefolded\",\n    \"CWKCF\",\n    \"Changes_When_Titlecased\",\n    \"CWT\",\n    \"Changes_When_Uppercased\",\n    \"CWU\",\n    \"Dash\",\n    \"Default_Ignorable_Code_Point\",\n    \"DI\",\n    \"Deprecated\",\n    \"Dep\",\n    \"Diacritic\",\n    \"Dia\",\n    \"Emoji\",\n    \"Emoji_Component\",\n    \"Emoji_Modifier\",\n    \"Emoji_Modifier_Base\",\n    \"Emoji_Presentation\",\n    \"Extender\",\n    \"Ext\",\n    \"Grapheme_Base\",\n    \"Gr_Base\",\n    \"Grapheme_Extend\",\n    \"Gr_Ext\",\n    \"Hex_Digit\",\n    \"Hex\",\n    \"IDS_Binary_Operator\",\n    \"IDSB\",\n    \"IDS_Trinary_Operator\",\n    \"IDST\",\n    \"ID_Continue\",\n    \"IDC\",\n    \"ID_Start\",\n    \"IDS\",\n    \"Ideographic\",\n    \"Ideo\",\n    \"Join_Control\",\n    \"Join_C\",\n    \"Logical_Order_Exception\",\n    \"LOE\",\n    \"Lowercase\",\n    \"Lower\",\n    \"Math\",\n    \"Noncharacter_Code_Point\",\n    \"NChar\",\n    \"Pattern_Syntax\",\n    \"Pat_Syn\",\n    \"Pattern_White_Space\",\n    \"Pat_WS\",\n    \"Quotation_Mark\",\n    \"QMark\",\n    \"Radical\",\n    \"Regional_Indicator\",\n    \"RI\",\n    \"Sentence_Terminal\",\n    \"STerm\",\n    \"Soft_Dotted\",\n    \"SD\",\n    \"Terminal_Punctuation\",\n    \"Term\",\n    \"Unified_Ideograph\",\n    \"UIdeo\",\n    \"Uppercase\",\n    \"Upper\",\n    \"Variation_Selector\",\n    \"VS\",\n    \"White_Space\",\n    \"space\",\n    \"XID_Continue\",\n    \"XIDC\",\n    \"XID_Start\",\n    \"XIDS\"\n  ],\n  \"General_Category\": [\n    \"Cased_Letter\",\n    \"LC\",\n    \"Close_Punctuation\",\n    \"Pe\",\n    \"Connector_Punctuation\",\n    \"Pc\",\n    \"Control\",\n    \"Cc\",\n    \"cntrl\",\n    \"Currency_Symbol\",\n    \"Sc\",\n    \"Dash_Punctuation\",\n    \"Pd\",\n    \"Decimal_Number\",\n    \"Nd\",\n    \"digit\",\n    \"Enclosing_Mark\",\n    \"Me\",\n    \"Final_Punctuation\",\n    \"Pf\",\n    \"Format\",\n    \"Cf\",\n    \"Initial_Punctuation\",\n    \"Pi\",\n    \"Letter\",\n    \"L\",\n    \"Letter_Number\",\n    \"Nl\",\n    \"Line_Separator\",\n    \"Zl\",\n    \"Lowercase_Letter\",\n    \"Ll\",\n    \"Mark\",\n    \"M\",\n    \"Combining_Mark\",\n    \"Math_Symbol\",\n    \"Sm\",\n    \"Modifier_Letter\",\n    \"Lm\",\n    \"Modifier_Symbol\",\n    \"Sk\",\n    \"Nonspacing_Mark\",\n    \"Mn\",\n    \"Number\",\n    \"N\",\n    \"Open_Punctuation\",\n    \"Ps\",\n    \"Other\",\n    \"C\",\n    \"Other_Letter\",\n    \"Lo\",\n    \"Other_Number\",\n    \"No\",\n    \"Other_Punctuation\",\n    \"Po\",\n    \"Other_Symbol\",\n    \"So\",\n    \"Paragraph_Separator\",\n    \"Zp\",\n    \"Private_Use\",\n    \"Co\",\n    \"Punctuation\",\n    \"P\",\n    \"punct\",\n    \"Separator\",\n    \"Z\",\n    \"Space_Separator\",\n    \"Zs\",\n    \"Spacing_Mark\",\n    \"Mc\",\n    \"Surrogate\",\n    \"Cs\",\n    \"Symbol\",\n    \"S\",\n    \"Titlecase_Letter\",\n    \"Lt\",\n    \"Unassigned\",\n    \"Cn\",\n    \"Uppercase_Letter\",\n    \"Lu\"\n  ],\n  \"Script\": [\n    \"Adlam\",\n    \"Adlm\",\n    \"Ahom\",\n    \"Anatolian_Hieroglyphs\",\n    \"Hluw\",\n    \"Arabic\",\n    \"Arab\",\n    \"Armenian\",\n    \"Armn\",\n    \"Avestan\",\n    \"Avst\",\n    \"Balinese\",\n    \"Bali\",\n    \"Bamum\",\n    \"Bamu\",\n    \"Bassa_Vah\",\n    \"Bass\",\n    \"Batak\",\n    \"Batk\",\n    \"Bengali\",\n    \"Beng\",\n    \"Bhaiksuki\",\n    \"Bhks\",\n    \"Bopomofo\",\n    \"Bopo\",\n    \"Brahmi\",\n    \"Brah\",\n    \"Braille\",\n    \"Brai\",\n    \"Buginese\",\n    \"Bugi\",\n    \"Buhid\",\n    \"Buhd\",\n    \"Canadian_Aboriginal\",\n    \"Cans\",\n    \"Carian\",\n    \"Cari\",\n    \"Caucasian_Albanian\",\n    \"Aghb\",\n    \"Chakma\",\n    \"Cakm\",\n    \"Cham\",\n    \"Cherokee\",\n    \"Cher\",\n    \"Common\",\n    \"Zyyy\",\n    \"Coptic\",\n    \"Copt\",\n    \"Qaac\",\n    \"Cuneiform\",\n    \"Xsux\",\n    \"Cypriot\",\n    \"Cprt\",\n    \"Cyrillic\",\n    \"Cyrl\",\n    \"Deseret\",\n    \"Dsrt\",\n    \"Devanagari\",\n    \"Deva\",\n    \"Duployan\",\n    \"Dupl\",\n    \"Egyptian_Hieroglyphs\",\n    \"Egyp\",\n    \"Elbasan\",\n    \"Elba\",\n    \"Ethiopic\",\n    \"Ethi\",\n    \"Georgian\",\n    \"Geor\",\n    \"Glagolitic\",\n    \"Glag\",\n    \"Gothic\",\n    \"Goth\",\n    \"Grantha\",\n    \"Gran\",\n    \"Greek\",\n    \"Grek\",\n    \"Gujarati\",\n    \"Gujr\",\n    \"Gurmukhi\",\n    \"Guru\",\n    \"Han\",\n    \"Hani\",\n    \"Hangul\",\n    \"Hang\",\n    \"Hanunoo\",\n    \"Hano\",\n    \"Hatran\",\n    \"Hatr\",\n    \"Hebrew\",\n    \"Hebr\",\n    \"Hiragana\",\n    \"Hira\",\n    \"Imperial_Aramaic\",\n    \"Armi\",\n    \"Inherited\",\n    \"Zinh\",\n    \"Qaai\",\n    \"Inscriptional_Pahlavi\",\n    \"Phli\",\n    \"Inscriptional_Parthian\",\n    \"Prti\",\n    \"Javanese\",\n    \"Java\",\n    \"Kaithi\",\n    \"Kthi\",\n    \"Kannada\",\n    \"Knda\",\n    \"Katakana\",\n    \"Kana\",\n    \"Kayah_Li\",\n    \"Kali\",\n    \"Kharoshthi\",\n    \"Khar\",\n    \"Khmer\",\n    \"Khmr\",\n    \"Khojki\",\n    \"Khoj\",\n    \"Khudawadi\",\n    \"Sind\",\n    \"Lao\",\n    \"Laoo\",\n    \"Latin\",\n    \"Latn\",\n    \"Lepcha\",\n    \"Lepc\",\n    \"Limbu\",\n    \"Limb\",\n    \"Linear_A\",\n    \"Lina\",\n    \"Linear_B\",\n    \"Linb\",\n    \"Lisu\",\n    \"Lycian\",\n    \"Lyci\",\n    \"Lydian\",\n    \"Lydi\",\n    \"Mahajani\",\n    \"Mahj\",\n    \"Malayalam\",\n    \"Mlym\",\n    \"Mandaic\",\n    \"Mand\",\n    \"Manichaean\",\n    \"Mani\",\n    \"Marchen\",\n    \"Marc\",\n    \"Masaram_Gondi\",\n    \"Gonm\",\n    \"Meetei_Mayek\",\n    \"Mtei\",\n    \"Mende_Kikakui\",\n    \"Mend\",\n    \"Meroitic_Cursive\",\n    \"Merc\",\n    \"Meroitic_Hieroglyphs\",\n    \"Mero\",\n    \"Miao\",\n    \"Plrd\",\n    \"Modi\",\n    \"Mongolian\",\n    \"Mong\",\n    \"Mro\",\n    \"Mroo\",\n    \"Multani\",\n    \"Mult\",\n    \"Myanmar\",\n    \"Mymr\",\n    \"Nabataean\",\n    \"Nbat\",\n    \"New_Tai_Lue\",\n    \"Talu\",\n    \"Newa\",\n    \"Nko\",\n    \"Nkoo\",\n    \"Nushu\",\n    \"Nshu\",\n    \"Ogham\",\n    \"Ogam\",\n    \"Ol_Chiki\",\n    \"Olck\",\n    \"Old_Hungarian\",\n    \"Hung\",\n    \"Old_Italic\",\n    \"Ital\",\n    \"Old_North_Arabian\",\n    \"Narb\",\n    \"Old_Permic\",\n    \"Perm\",\n    \"Old_Persian\",\n    \"Xpeo\",\n    \"Old_South_Arabian\",\n    \"Sarb\",\n    \"Old_Turkic\",\n    \"Orkh\",\n    \"Oriya\",\n    \"Orya\",\n    \"Osage\",\n    \"Osge\",\n    \"Osmanya\",\n    \"Osma\",\n    \"Pahawh_Hmong\",\n    \"Hmng\",\n    \"Palmyrene\",\n    \"Palm\",\n    \"Pau_Cin_Hau\",\n    \"Pauc\",\n    \"Phags_Pa\",\n    \"Phag\",\n    \"Phoenician\",\n    \"Phnx\",\n    \"Psalter_Pahlavi\",\n    \"Phlp\",\n    \"Rejang\",\n    \"Rjng\",\n    \"Runic\",\n    \"Runr\",\n    \"Samaritan\",\n    \"Samr\",\n    \"Saurashtra\",\n    \"Saur\",\n    \"Sharada\",\n    \"Shrd\",\n    \"Shavian\",\n    \"Shaw\",\n    \"Siddham\",\n    \"Sidd\",\n    \"SignWriting\",\n    \"Sgnw\",\n    \"Sinhala\",\n    \"Sinh\",\n    \"Sora_Sompeng\",\n    \"Sora\",\n    \"Soyombo\",\n    \"Soyo\",\n    \"Sundanese\",\n    \"Sund\",\n    \"Syloti_Nagri\",\n    \"Sylo\",\n    \"Syriac\",\n    \"Syrc\",\n    \"Tagalog\",\n    \"Tglg\",\n    \"Tagbanwa\",\n    \"Tagb\",\n    \"Tai_Le\",\n    \"Tale\",\n    \"Tai_Tham\",\n    \"Lana\",\n    \"Tai_Viet\",\n    \"Tavt\",\n    \"Takri\",\n    \"Takr\",\n    \"Tamil\",\n    \"Taml\",\n    \"Tangut\",\n    \"Tang\",\n    \"Telugu\",\n    \"Telu\",\n    \"Thaana\",\n    \"Thaa\",\n    \"Thai\",\n    \"Tibetan\",\n    \"Tibt\",\n    \"Tifinagh\",\n    \"Tfng\",\n    \"Tirhuta\",\n    \"Tirh\",\n    \"Ugaritic\",\n    \"Ugar\",\n    \"Vai\",\n    \"Vaii\",\n    \"Warang_Citi\",\n    \"Wara\",\n    \"Yi\",\n    \"Yiii\",\n    \"Zanabazar_Square\",\n    \"Zanb\"\n  ]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.7.1\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\n // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  exports.parse_dammit = parse; // eslint-disable-line camelcase\n  exports.LooseParser = Parser$$1;\n  exports.pluginsLoose = plugins$$1;\n}\n\nexports.version = version;\nexports.parse = parse;\nexports.parseExpressionAt = parseExpressionAt;\nexports.tokenizer = tokenizer;\nexports.addLooseExports = addLooseExports;\nexports.Parser = Parser;\nexports.plugins = plugins;\nexports.defaultOptions = defaultOptions;\nexports.Position = Position;\nexports.SourceLocation = SourceLocation;\nexports.getLineInfo = getLineInfo;\nexports.Node = Node;\nexports.TokenType = TokenType;\nexports.tokTypes = types;\nexports.keywordTypes = keywords$1;\nexports.TokContext = TokContext;\nexports.tokContexts = types$1;\nexports.isIdentifierChar = isIdentifierChar;\nexports.isIdentifierStart = isIdentifierStart;\nexports.Token = Token;\nexports.isNewLine = isNewLine;\nexports.lineBreak = lineBreak;\nexports.lineBreakG = lineBreakG;\nexports.nonASCIIwhitespace = nonASCIIwhitespace;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define('Misbehave', factory) :\n\t(global.Misbehave = factory());\n}(this, (function () { 'use strict';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/* eslint-env node, browser */\nvar bind = function (keys, callback, action) {\n  var self = this;\n\n  keys = keys instanceof Array ? keys : [keys];\n  self.bindMultiple(keys, callback, action);\n  return self\n};\n\n/* eslint-env node, browser */\nvar bindMultiple = function (combinations, callback, action) {\n  var self = this;\n\n  for (var j = 0; j < combinations.length; ++j) {\n    self.bindSingle(combinations[j], callback, action);\n  }\n};\n\n/* eslint-env node, browser */\nvar unbind = function (keys, action) {\n  var self = this;\n\n  return self.bind(keys, function () {}, action)\n};\n\n/* eslint-env node, browser */\nvar trigger = function (keys, action) {\n  var self = this;\n  if (self.directMap[keys + ':' + action]) {\n    self.directMap[keys + ':' + action]({}, keys);\n  }\n  return this\n};\n\n/* eslint-env node, browser */\nvar reset = function () {\n  var self = this;\n  self.callbacks = {};\n  self.directMap = {};\n  return this\n};\n\n/* eslint-env node, browser */\nvar stopCallback = function (e, element) {\n  // if the element has the class \"combokeys\" then no need to stop\n  if ((' ' + element.className + ' ').indexOf(' combokeys ') > -1) {\n    return false\n  }\n\n  var tagName = element.tagName.toLowerCase();\n\n  // stop for input, select, and textarea\n  return tagName === 'input' || tagName === 'select' || tagName === 'textarea' || element.isContentEditable\n};\n\n/* eslint-env node, browser */\nvar isModifier = function (key) {\n  return key === 'shift' || key === 'ctrl' || key === 'alt' || key === 'meta'\n};\n\nvar handleKey = function (character, modifiers, e) {\n  var self = this;\n  var callbacks;\n  var j;\n  var doNotReset = {};\n  var maxLevel = 0;\n  var processedSequenceCallback = false;\n  var isModifier$$1;\n  var ignoreThisKeypress;\n\n  callbacks = self.getMatches(character, modifiers, e);\n  // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n  for (j = 0; j < callbacks.length; ++j) {\n    if (callbacks[j].seq) {\n      maxLevel = Math.max(maxLevel, callbacks[j].level);\n    }\n  }\n\n  // loop through matching callbacks for this key event\n  for (j = 0; j < callbacks.length; ++j) {\n    // fire for all sequence callbacks\n    // this is because if for example you have multiple sequences\n    // bound such as \"g i\" and \"g t\" they both need to fire the\n    // callback for matching g cause otherwise you can only ever\n    // match the first one\n    if (callbacks[j].seq) {\n      // only fire callbacks for the maxLevel to prevent\n      // subsequences from also firing\n      //\n      // for example 'a option b' should not cause 'option b' to fire\n      // even though 'option b' is part of the other sequence\n      //\n      // any sequences that do not match here will be discarded\n      // below by the resetSequences call\n      if (callbacks[j].level !== maxLevel) {\n        continue\n      }\n\n      processedSequenceCallback = true;\n\n      // keep a list of which sequences were matches for later\n      doNotReset[callbacks[j].seq] = 1;\n      self.fireCallback(callbacks[j].callback, e, callbacks[j].combo, callbacks[j].seq);\n      continue\n    }\n\n    // if there were no sequence matches but we are still here\n    // that means this is a regular match so we should fire that\n    if (!processedSequenceCallback) {\n      self.fireCallback(callbacks[j].callback, e, callbacks[j].combo);\n    }\n  }\n\n  // if the key you pressed matches the type of sequence without\n  // being a modifier (ie \"keyup\" or \"keypress\") then we should\n  // reset all sequences that were not matched by this event\n  //\n  // this is so, for example, if you have the sequence \"h a t\" and you\n  // type \"h e a r t\" it does not match.  in this case the \"e\" will\n  // cause the sequence to reset\n  //\n  // modifier keys are ignored because you can have a sequence\n  // that contains modifiers such as \"enter ctrl+space\" and in most\n  // cases the modifier key will be pressed before the next key\n  //\n  // also if you have a sequence such as \"ctrl+b a\" then pressing the\n  // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n  //\n  // the \"keydown\" is expected when there is a modifier, but the\n  // \"keypress\" ends up matching the nextExpectedAction since it occurs\n  // after and that causes the sequence to reset\n  //\n  // we ignore keypresses in a sequence that directly follow a keydown\n  // for the same character\n  ignoreThisKeypress = e.type === 'keypress' && self.ignoreNextKeypress;\n  isModifier$$1 = isModifier;\n  if (e.type === self.nextExpectedAction && !isModifier$$1(character) && !ignoreThisKeypress) {\n    self.resetSequences(doNotReset);\n  }\n\n  self.ignoreNextKeypress = processedSequenceCallback && e.type === 'keydown';\n};\n\nvar domEvent = on;\nvar on_1 = on;\nvar off_1 = off;\n\nfunction on (element, event, callback, capture) {\n  !element.addEventListener && (event = 'on' + event)\n  ;(element.addEventListener || element.attachEvent).call(element, event, callback, capture);\n  return callback\n}\n\nfunction off (element, event, callback, capture) {\n  !element.removeEventListener && (event = 'on' + event)\n  ;(element.removeEventListener || element.detachEvent).call(element, event, callback, capture);\n  return callback\n}\n\ndomEvent.on = on_1;\ndomEvent.off = off_1;\n\nvar specialKeysMap = createCommonjsModule(function (module) {\n/* eslint-env node, browser */\n'use strict';\n/**\n * mapping of special keycodes to their corresponding keys\n *\n * everything in this dictionary cannot use keypress events\n * so it has to be here to map to the correct keycodes for\n * keyup/keydown events\n *\n * @type {Object}\n */\nmodule.exports = {\n  8: 'backspace',\n  9: 'tab',\n  13: 'enter',\n  16: 'shift',\n  17: 'ctrl',\n  18: 'alt',\n  20: 'capslock',\n  27: 'esc',\n  32: 'space',\n  33: 'pageup',\n  34: 'pagedown',\n  35: 'end',\n  36: 'home',\n  37: 'left',\n  38: 'up',\n  39: 'right',\n  40: 'down',\n  45: 'ins',\n  46: 'del',\n  91: 'meta',\n  93: 'meta',\n  187: 'plus',\n  189: 'minus',\n  224: 'meta'\n};\n\n/**\n * loop through the f keys, f1 to f19 and add them to the map\n * programatically\n */\nfor (var i = 1; i < 20; ++i) {\n  module.exports[111 + i] = 'f' + i;\n}\n\n/**\n * loop through to map numbers on the numeric keypad\n */\nfor (i = 0; i <= 9; ++i) {\n  module.exports[i + 96] = i;\n}\n});\n\n/* eslint-env node, browser */\nvar specialCharactersMap = {\n  106: '*',\n  107: '+',\n  109: '-',\n  110: '.',\n  111: '/',\n  186: ';',\n  187: '=',\n  188: ',',\n  189: '-',\n  190: '.',\n  191: '/',\n  192: '`',\n  219: '[',\n  220: '\\\\',\n  221: ']',\n  222: \"'\"\n};\n\nvar characterFromEvent = function (e) {\n  var SPECIAL_KEYS_MAP,\n    SPECIAL_CHARACTERS_MAP;\n  SPECIAL_KEYS_MAP = specialKeysMap;\n  SPECIAL_CHARACTERS_MAP = specialCharactersMap;\n\n  // for keypress events we should return the character as is\n  if (e.type === 'keypress') {\n    var character = String.fromCharCode(e.which);\n\n    // if the shift key is not pressed then it is safe to assume\n    // that we want the character to be lowercase.  this means if\n    // you accidentally have caps lock on then your key bindings\n    // will continue to work\n    //\n    // the only side effect that might not be desired is if you\n    // bind something like 'A' cause you want to trigger an\n    // event when capital A is pressed caps lock will no longer\n    // trigger the event.  shift+a will though.\n    if (!e.shiftKey) {\n      character = character.toLowerCase();\n    }\n\n    return character\n  }\n\n  // for non keypress events the special maps are needed\n  if (SPECIAL_KEYS_MAP[e.which]) {\n    return SPECIAL_KEYS_MAP[e.which]\n  }\n\n  if (SPECIAL_CHARACTERS_MAP[e.which]) {\n    return SPECIAL_CHARACTERS_MAP[e.which]\n  }\n\n  // if it is not in the special map\n\n  // with keydown and keyup events the character seems to always\n  // come in as an uppercase character whether you are pressing shift\n  // or not.  we should make sure it is always lowercase for comparisons\n  return String.fromCharCode(e.which).toLowerCase()\n};\n\n/* eslint-env node, browser */\nvar eventModifiers = function (e) {\n  var modifiers = [];\n\n  if (e.shiftKey) {\n    modifiers.push('shift');\n  }\n\n  if (e.altKey) {\n    modifiers.push('alt');\n  }\n\n  if (e.ctrlKey) {\n    modifiers.push('ctrl');\n  }\n\n  if (e.metaKey) {\n    modifiers.push('meta');\n  }\n\n  return modifiers\n};\n\nvar handleKeyEvent = function (e) {\n  var self = this;\n  var characterFromEvent$$1;\n  var eventModifiers$$1;\n\n  // normalize e.which for key events\n  // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n  if (typeof e.which !== 'number') {\n    e.which = e.keyCode;\n  }\n  characterFromEvent$$1 = characterFromEvent;\n  var character = characterFromEvent$$1(e);\n\n  // no character found then stop\n  if (!character) {\n    return\n  }\n\n  // need to use === for the character check because the character can be 0\n  if (e.type === 'keyup' && self.ignoreNextKeyup === character) {\n    self.ignoreNextKeyup = false;\n    return\n  }\n\n  eventModifiers$$1 = eventModifiers;\n  self.handleKey(character, eventModifiers$$1(e), e);\n};\n\nvar addEvents = function () {\n  var self = this;\n  var on = domEvent;\n  var element = self.element;\n\n  self.eventHandler = handleKeyEvent.bind(self);\n\n  on(element, 'keypress', self.eventHandler);\n  on(element, 'keydown', self.eventHandler);\n  on(element, 'keyup', self.eventHandler);\n};\n\n/* eslint-env node, browser */\nvar bindSingle = function (combination, callback, action, sequenceName, level) {\n  var self = this;\n\n  // store a direct mapped reference for use with Combokeys.trigger\n  self.directMap[combination + ':' + action] = callback;\n\n  // make sure multiple spaces in a row become a single space\n  combination = combination.replace(/\\s+/g, ' ');\n\n  var sequence = combination.split(' ');\n  var info;\n\n  // if this pattern is a sequence of keys then run through this method\n  // to reprocess each pattern one key at a time\n  if (sequence.length > 1) {\n    self.bindSequence(combination, sequence, callback, action);\n    return\n  }\n\n  info = self.getKeyInfo(combination, action);\n\n  // make sure to initialize array if this is the first time\n  // a callback is added for this key\n  self.callbacks[info.key] = self.callbacks[info.key] || [];\n\n  // remove an existing match if there is one\n  self.getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n  // add this call back to the array\n  // if it is a sequence put it at the beginning\n  // if not put it at the end\n  //\n  // this is important because the way these are processed expects\n  // the sequence ones to come first\n  self.callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n    callback: callback,\n    modifiers: info.modifiers,\n    action: info.action,\n    seq: sequenceName,\n    level: level,\n    combo: combination\n  });\n};\n\n/* eslint-env node, browser */\nvar keysFromString = function (combination) {\n  if (combination === '+') {\n    return ['+']\n  }\n\n  return combination.split('+')\n};\n\n/* eslint-env node, browser */\nvar specialAliases = {\n  'option': 'alt',\n  'command': 'meta',\n  'return': 'enter',\n  'escape': 'esc',\n  'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n};\n\n/* eslint-env node, browser */\nvar shiftMap = {\n  '~': '`',\n  '!': '1',\n  '@': '2',\n  '#': '3',\n  '$': '4',\n  '%': '5',\n  '^': '6',\n  '&': '7',\n  '*': '8',\n  '(': '9',\n  ')': '0',\n  '_': '-',\n  '+': '=',\n  ':': ';',\n  '\"': \"'\",\n  '<': ',',\n  '>': '.',\n  '?': '/',\n  '|': '\\\\'\n};\n\nvar getKeyInfo = function (combination, action) {\n  var self = this;\n  var keysFromString$$1;\n  var keys;\n  var key;\n  var j;\n  var modifiers = [];\n  var SPECIAL_ALIASES;\n  var SHIFT_MAP;\n  var isModifier$$1;\n\n  keysFromString$$1 = keysFromString;\n  // take the keys from this pattern and figure out what the actual\n  // pattern is all about\n  keys = keysFromString$$1(combination);\n\n  SPECIAL_ALIASES = specialAliases;\n  SHIFT_MAP = shiftMap;\n  isModifier$$1 = isModifier;\n  for (j = 0; j < keys.length; ++j) {\n    key = keys[j];\n\n    // normalize key names\n    if (SPECIAL_ALIASES[key]) {\n      key = SPECIAL_ALIASES[key];\n    }\n\n    // if this is not a keypress event then we should\n    // be smart about using shift keys\n    // this will only work for US keyboards however\n    if (action && action !== 'keypress' && SHIFT_MAP[key]) {\n      key = SHIFT_MAP[key];\n      modifiers.push('shift');\n    }\n\n    // if this key is a modifier then add it to the list of modifiers\n    if (isModifier$$1(key)) {\n      modifiers.push(key);\n    }\n  }\n\n  // depending on what the key combination is\n  // we will try to pick the best event for it\n  action = self.pickBestAction(key, modifiers, action);\n\n  return {\n    key: key,\n    modifiers: modifiers,\n    action: action\n  }\n};\n\n/* eslint-env node, browser */\nvar pickBestAction = function (key, modifiers, action) {\n  var self = this;\n\n  // if no action was picked in we should try to pick the one\n  // that we think would work best for this key\n  if (!action) {\n    action = self.getReverseMap()[key] ? 'keydown' : 'keypress';\n  }\n\n  // modifier keys don't work as expected with keypress,\n  // switch to keydown\n  if (action === 'keypress' && modifiers.length) {\n    action = 'keydown';\n  }\n\n  return action\n};\n\nvar getReverseMap = function () {\n  var self = this;\n  var constructor = self.constructor;\n  var SPECIAL_KEYS_MAP;\n\n  if (!constructor.REVERSE_MAP) {\n    constructor.REVERSE_MAP = {};\n    SPECIAL_KEYS_MAP = specialKeysMap;\n    for (var key in SPECIAL_KEYS_MAP) {\n      // pull out the numeric keypad from here cause keypress should\n      // be able to detect the keys from the character\n      if (key > 95 && key < 112) {\n        continue\n      }\n\n      if (SPECIAL_KEYS_MAP.hasOwnProperty(key)) {\n        constructor.REVERSE_MAP[SPECIAL_KEYS_MAP[key]] = key;\n      }\n    }\n  }\n  return constructor.REVERSE_MAP\n};\n\n/* eslint-env node, browser */\nvar modifiersMatch = function (modifiers1, modifiers2) {\n  return modifiers1.sort().join(',') === modifiers2.sort().join(',')\n};\n\nvar getMatches = function (character, modifiers, e, sequenceName, combination, level) {\n  var self = this;\n  var j;\n  var callback;\n  var matches = [];\n  var action = e.type;\n  var isModifier$$1;\n  var modifiersMatch$$1;\n\n  if (\n      action === 'keypress' &&\n      // Firefox fires keypress for arrows\n      !(e.code && e.code.slice(0, 5) === 'Arrow')\n  ) {\n    // 'any-character' callbacks are only on `keypress`\n    var anyCharCallbacks = self.callbacks['any-character'] || [];\n    anyCharCallbacks.forEach(function (callback) {\n      matches.push(callback);\n    });\n  }\n\n  if (!self.callbacks[character]) { return matches }\n\n  isModifier$$1 = isModifier;\n  // if a modifier key is coming up on its own we should allow it\n  if (action === 'keyup' && isModifier$$1(character)) {\n    modifiers = [character];\n  }\n\n  // loop through all callbacks for the key that was pressed\n  // and see if any of them match\n  for (j = 0; j < self.callbacks[character].length; ++j) {\n    callback = self.callbacks[character][j];\n\n    // if a sequence name is not specified, but this is a sequence at\n    // the wrong level then move onto the next match\n    if (!sequenceName && callback.seq && self.sequenceLevels[callback.seq] !== callback.level) {\n      continue\n    }\n\n    // if the action we are looking for doesn't match the action we got\n    // then we should keep going\n    if (action !== callback.action) {\n      continue\n    }\n\n    // if this is a keypress event and the meta key and control key\n    // are not pressed that means that we need to only look at the\n    // character, otherwise check the modifiers as well\n    //\n    // chrome will not fire a keypress if meta or control is down\n    // safari will fire a keypress if meta or meta+shift is down\n    // firefox will fire a keypress if meta or control is down\n    modifiersMatch$$1 = modifiersMatch;\n    if ((action === 'keypress' && !e.metaKey && !e.ctrlKey) || modifiersMatch$$1(modifiers, callback.modifiers)) {\n      // when you bind a combination or sequence a second time it\n      // should overwrite the first one.  if a sequenceName or\n      // combination is specified in this call it does just that\n      //\n      // @todo make deleting its own method?\n      var deleteCombo = !sequenceName && callback.combo === combination;\n      var deleteSequence = sequenceName && callback.seq === sequenceName && callback.level === level;\n      if (deleteCombo || deleteSequence) {\n        self.callbacks[character].splice(j, 1);\n      }\n\n      matches.push(callback);\n    }\n  }\n\n  return matches\n};\n\n/* eslint-env node, browser */\nvar resetSequences = function (doNotReset) {\n  var self = this;\n\n  doNotReset = doNotReset || {};\n\n  var activeSequences = false;\n  var key;\n\n  for (key in self.sequenceLevels) {\n    if (doNotReset[key]) {\n      activeSequences = true;\n      continue\n    }\n    self.sequenceLevels[key] = 0;\n  }\n\n  if (!activeSequences) {\n    self.nextExpectedAction = false;\n  }\n};\n\n/* eslint-env node, browser */\nvar preventDefault = function (e) {\n  if (e.preventDefault) {\n    e.preventDefault();\n    return\n  }\n\n  e.returnValue = false;\n};\n\n/* eslint-env node, browser */\nvar stopPropagation = function (e) {\n  if (e.stopPropagation) {\n    e.stopPropagation();\n    return\n  }\n\n  e.cancelBubble = true;\n};\n\nvar fireCallback = function (callback, e, combo, sequence) {\n  var self = this;\n  var preventDefault$$1;\n  var stopPropagation$$1;\n\n  // if this event should not happen stop here\n  if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n    return\n  }\n\n  if (callback(e, combo) === false) {\n    preventDefault$$1 = preventDefault;\n    preventDefault$$1(e);\n    stopPropagation$$1 = stopPropagation;\n    stopPropagation$$1(e);\n  }\n};\n\nvar bindSequence = function (combo, keys, callback, action) {\n  var self = this;\n\n  // start off by adding a sequence level record for this combination\n  // and setting the level to 0\n  self.sequenceLevels[combo] = 0;\n\n  /**\n   * callback to increase the sequence level for this sequence and reset\n   * all other sequences that were active\n   *\n   * @param {string} nextAction\n   * @returns {Function}\n   */\n  function increaseSequence (nextAction) {\n    return function () {\n      self.nextExpectedAction = nextAction;\n      ++self.sequenceLevels[combo];\n      self.resetSequenceTimer();\n    }\n  }\n\n  /**\n   * wraps the specified callback inside of another function in order\n   * to reset all sequence counters as soon as this sequence is done\n   *\n   * @param {Event} e\n   * @returns void\n   */\n  function callbackAndReset (e) {\n    var characterFromEvent$$1;\n    self.fireCallback(callback, e, combo);\n\n    // we should ignore the next key up if the action is key down\n    // or keypress.  this is so if you finish a sequence and\n    // release the key the final key will not trigger a keyup\n    if (action !== 'keyup') {\n      characterFromEvent$$1 = characterFromEvent;\n      self.ignoreNextKeyup = characterFromEvent$$1(e);\n    }\n\n    // weird race condition if a sequence ends with the key\n    // another sequence begins with\n    setTimeout(\n      function () {\n        self.resetSequences();\n      },\n      10\n    );\n  }\n\n  // loop through keys one at a time and bind the appropriate callback\n  // function.  for any key leading up to the final one it should\n  // increase the sequence. after the final, it should reset all sequences\n  //\n  // if an action is specified in the original bind call then that will\n  // be used throughout.  otherwise we will pass the action that the\n  // next key in the sequence should match.  this allows a sequence\n  // to mix and match keypress and keydown events depending on which\n  // ones are better suited to the key provided\n  for (var j = 0; j < keys.length; ++j) {\n    var isFinal = j + 1 === keys.length;\n    var wrappedCallback = isFinal ? callbackAndReset : increaseSequence(action || self.getKeyInfo(keys[j + 1]).action);\n    self.bindSingle(keys[j], wrappedCallback, action, combo, j);\n  }\n};\n\n/* eslint-env node, browser */\nvar resetSequenceTimer = function () {\n  var self = this;\n\n  clearTimeout(self.resetTimer);\n  self.resetTimer = setTimeout(\n    function () {\n      self.resetSequences();\n    },\n    1000\n  );\n};\n\nvar off$1 = domEvent.off;\nvar detach = function () {\n  var self = this;\n  var element = self.element;\n\n  off$1(element, 'keypress', self.eventHandler);\n  off$1(element, 'keydown', self.eventHandler);\n  off$1(element, 'keyup', self.eventHandler);\n};\n\n/* eslint-env node, browser */\nvar reset$2 = function () {\n  var self = this;\n\n  self.instances.forEach(function (combokeys) {\n    combokeys.reset();\n  });\n};\n\nvar index = createCommonjsModule(function (module) {\n/* eslint-env node, browser */\n'use strict';\n\nmodule.exports = function (element) {\n  var self = this;\n  var Combokeys = self.constructor;\n\n  /**\n   * a list of all the callbacks setup via Combokeys.bind()\n   *\n   * @type {Object}\n   */\n  self.callbacks = {};\n\n  /**\n   * direct map of string combinations to callbacks used for trigger()\n   *\n   * @type {Object}\n   */\n  self.directMap = {};\n\n  /**\n   * keeps track of what level each sequence is at since multiple\n   * sequences can start out with the same sequence\n   *\n   * @type {Object}\n   */\n  self.sequenceLevels = {};\n\n  /**\n   * variable to store the setTimeout call\n   *\n   * @type {null|number}\n   */\n  self.resetTimer;\n\n  /**\n   * temporary state where we will ignore the next keyup\n   *\n   * @type {boolean|string}\n   */\n  self.ignoreNextKeyup = false;\n\n  /**\n   * temporary state where we will ignore the next keypress\n   *\n   * @type {boolean}\n   */\n  self.ignoreNextKeypress = false;\n\n  /**\n   * are we currently inside of a sequence?\n   * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n   *\n   * @type {boolean|string}\n   */\n  self.nextExpectedAction = false;\n\n  self.element = element;\n\n  self.addEvents();\n\n  Combokeys.instances.push(self);\n  return self\n};\n\nmodule.exports.prototype.bind = bind;\nmodule.exports.prototype.bindMultiple = bindMultiple;\nmodule.exports.prototype.unbind = unbind;\nmodule.exports.prototype.trigger = trigger;\nmodule.exports.prototype.reset = reset;\nmodule.exports.prototype.stopCallback = stopCallback;\nmodule.exports.prototype.handleKey = handleKey;\nmodule.exports.prototype.addEvents = addEvents;\nmodule.exports.prototype.bindSingle = bindSingle;\nmodule.exports.prototype.getKeyInfo = getKeyInfo;\nmodule.exports.prototype.pickBestAction = pickBestAction;\nmodule.exports.prototype.getReverseMap = getReverseMap;\nmodule.exports.prototype.getMatches = getMatches;\nmodule.exports.prototype.resetSequences = resetSequences;\nmodule.exports.prototype.fireCallback = fireCallback;\nmodule.exports.prototype.bindSequence = bindSequence;\nmodule.exports.prototype.resetSequenceTimer = resetSequenceTimer;\nmodule.exports.prototype.detach = detach;\n\nmodule.exports.instances = [];\nmodule.exports.reset = reset$2;\n\n/**\n * variable to store the flipped version of MAP from above\n * needed to check if we should use keypress or not when no action\n * is specified\n *\n * @type {Object|undefined}\n */\nmodule.exports.REVERSE_MAP = null;\n});\n\nvar undomanager = createCommonjsModule(function (module) {\n/*\nSimple Javascript undo and redo.\nhttps://github.com/ArthurClemens/Javascript-Undo-Manager\n*/\n\n(function() {\n\n\t'use strict';\n\n    function removeFromTo(array, from, to) {\n        array.splice(from,\n            !to ||\n            1 + to - from + (!(to < 0 ^ from >= 0) && (to < 0 || -1) * array.length));\n        return array.length;\n    }\n\n    var UndoManager = function() {\n\n        var commands = [],\n            index = -1,\n            limit = 0,\n            isExecuting = false,\n            callback,\n            \n            // functions\n            execute;\n\n        execute = function(command, action) {\n            if (!command || typeof command[action] !== \"function\") {\n                return this;\n            }\n            isExecuting = true;\n\n            command[action]();\n\n            isExecuting = false;\n            return this;\n        };\n\n        return {\n\n            /*\n            Add a command to the queue.\n            */\n            add: function (command) {\n                if (isExecuting) {\n                    return this;\n                }\n                // if we are here after having called undo,\n                // invalidate items higher on the stack\n                commands.splice(index + 1, commands.length - index);\n\n                commands.push(command);\n                \n                // if limit is set, remove items from the start\n                if (limit && commands.length > limit) {\n                    removeFromTo(commands, 0, -(limit+1));\n                }\n                \n                // set the current index to the end\n                index = commands.length - 1;\n                if (callback) {\n                    callback();\n                }\n                return this;\n            },\n\n            /*\n            Pass a function to be called on undo and redo actions.\n            */\n            setCallback: function (callbackFunc) {\n                callback = callbackFunc;\n            },\n\n            /*\n            Perform undo: call the undo function at the current index and decrease the index by 1.\n            */\n            undo: function () {\n                var command = commands[index];\n                if (!command) {\n                    return this;\n                }\n                execute(command, \"undo\");\n                index -= 1;\n                if (callback) {\n                    callback();\n                }\n                return this;\n            },\n\n            /*\n            Perform redo: call the redo function at the next index and increase the index by 1.\n            */\n            redo: function () {\n                var command = commands[index + 1];\n                if (!command) {\n                    return this;\n                }\n                execute(command, \"redo\");\n                index += 1;\n                if (callback) {\n                    callback();\n                }\n                return this;\n            },\n\n            /*\n            Clears the memory, losing all stored states. Reset the index.\n            */\n            clear: function () {\n                var prev_size = commands.length;\n\n                commands = [];\n                index = -1;\n\n                if (callback && (prev_size > 0)) {\n                    callback();\n                }\n            },\n\n            hasUndo: function () {\n                return index !== -1;\n            },\n\n            hasRedo: function () {\n                return index < (commands.length - 1);\n            },\n\n            getCommands: function () {\n                return commands;\n            },\n\n            getIndex: function() {\n                return index;\n            },\n            \n            setLimit: function (l) {\n                limit = l;\n            }\n        };\n    };\n\n\tif (typeof undefined === 'function' && typeof undefined.amd === 'object' && undefined.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tundefined(function() {\n\t\t\treturn UndoManager;\n\t\t});\n\t} else if ('object' !== 'undefined' && module.exports) {\n\t\tmodule.exports = UndoManager;\n\t} else {\n\t\twindow.UndoManager = UndoManager;\n\t}\n\n}());\n});\n\nvar getSections = function (elem, callback) {\n  var sel, range, tempRange, prefix = '', selected = '', suffix = '';\n\n  if (document.activeElement !== elem) {\n    suffix = elem.textContent;\n  } else if (typeof window.getSelection !== 'undefined') {\n    sel = window.getSelection();\n    selected = sel.toString();\n    if (sel.rangeCount) {\n      range = sel.getRangeAt(0);\n    } else {\n      range = document.createRange();\n      range.collapse(true);\n    }\n    tempRange = document.createRange();\n    tempRange.selectNodeContents(elem);\n    tempRange.setEnd(range.startContainer, range.startOffset);\n    prefix = tempRange.toString();\n\n    tempRange.selectNodeContents(elem);\n    tempRange.setStart(range.endContainer, range.endOffset);\n    suffix = tempRange.toString();\n\n    tempRange.detach();\n  } else if ( (sel = document.selection) && sel.type != 'Control') {\n    range = sel.createRange();\n    tempRange = document.body.createTextRange();\n    selected = tempRange.text;\n\n    tempRange.moveToElementText(elem);\n    tempRange.setEndPoint('EndToStart', range);\n    prefix = tempRange.text;\n\n    tempRange.moveToElementText(elem);\n    tempRange.setEndPoint('StartToEnd', range);\n    suffix = tempRange.text;\n  }\n\n  if (callback)\n    { return callback({ prefix: prefix, selected: selected, suffix: suffix }, sel) }\n  else\n    { return { prefix: prefix, selected: selected, suffix: suffix } }\n};\n\nvar getTextNodesIn = function (node) {\n  var textNodes = [];\n  if (node.nodeType == 3) {\n    textNodes.push(node);\n  } else {\n    var children = node.childNodes;\n    for (var i = 0, len = children.length; i < len; ++i) {\n      textNodes.push.apply(textNodes, getTextNodesIn(children[i]));\n    }\n  }\n  return textNodes\n};\n\nvar setSelection = function (elem, start, end) {\n  if (document.createRange && window.getSelection) {\n    var range = document.createRange();\n    range.selectNodeContents(elem);\n    var textNodes = getTextNodesIn(elem);\n    var foundStart = false;\n    var charCount = 0, endCharCount;\n\n    for (var i = 0, textNode; textNode = textNodes[i++]; ) {\n      endCharCount = charCount + textNode.length;\n      if (!foundStart && start >= charCount && (start < endCharCount || (start == endCharCount && i <= textNodes.length))) {\n        range.setStart(textNode, start - charCount);\n        foundStart = true;\n      }\n      if (foundStart && end <= endCharCount) {\n        range.setEnd(textNode, end - charCount);\n        break\n      }\n      charCount = endCharCount;\n    }\n\n    var sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  } else if (document.selection && document.body.createTextRange) {\n    var textRange = document.body.createTextRange();\n    textRange.moveToElementText(elem);\n    textRange.collapse(true);\n    textRange.moveEnd('character', end);\n    textRange.moveStart('character', start);\n    textRange.select();\n  }\n};\n\nvar allNewLines = /\\r\\n|\\r|\\n/g;\n\nvar onNewLine = /\\r\\n|\\r|\\n/;\n\nvar leadingWhitespace = /^\\s*/;\n\nvar allCharacters = /./g;\n\nvar removeIfStartsWith = function (s) { return function (line) { return line.startsWith(s) ? line.slice(s.length) : line; }; };\n\nvar defineNewLine = function () {\n  var ta = document.createElement('textarea');\n  ta.value = '\\n';\n  if (ta.value.length === 2)\n    { return '\\r\\n' }\n  else\n    { return '\\n' }\n};\n\nvar Editable = function Editable(elem, ref) {\n  if ( ref === void 0 ) ref = {};\n  var autoIndent = ref.autoIndent; if ( autoIndent === void 0 ) autoIndent = true;\n  var autoOpen = ref.autoOpen; if ( autoOpen === void 0 ) autoOpen = true;\n  var autoStrip = ref.autoStrip; if ( autoStrip === void 0 ) autoStrip = true;\n  var overwrite = ref.overwrite; if ( overwrite === void 0 ) overwrite = true;\n  var softTabs = ref.softTabs; if ( softTabs === void 0 ) softTabs = 2;\n  var replaceTab = ref.replaceTab; if ( replaceTab === void 0 ) replaceTab = true;\n  var pairs = ref.pairs; if ( pairs === void 0 ) pairs = [['(', ')'], ['[', ']'], ['{', '}'], ['\"'], [\"'\"]];\n  var oninput = ref.oninput; if ( oninput === void 0 ) oninput = function () {};\n  var undoLimit = ref.undoLimit; if ( undoLimit === void 0 ) undoLimit = 0;\n  var behavior = ref.behavior;\n  var store = ref.store;\n\n\n  var editable = this;\n  var handler = behavior(defineNewLine(), softTabs ? ' '.repeat(softTabs) : '\\t');\n\n  var undoMgr = new undomanager();\n  undoMgr.setLimit(undoLimit);\n\n  var setDom = function (value) {\n    var content = value.prefix + value.selected + value.suffix;\n    elem.textContent = content;\n    oninput(content, value);\n    setSelection(elem, value.prefix.length, value.prefix.length + value.selected.length);\n  };\n\n  var update = function (content) {\n    var previous = store();\n    undoMgr.add({\n      undo : function () { setDom(previous); },\n      redo : function () { setDom(content); }\n    });\n    store(content);\n    setDom(content);\n  };\n\n  var keys = new index(elem);\n  keys.stopCallback = function () { return false; }; // work without needing to set combokeys class on elements\n\n  keys.bind('mod+z', function () { undoMgr.undo(); return false });\n  keys.bind('shift+mod+z', function () { undoMgr.redo(); return false });\n\n  if (autoIndent) {\n    keys.bind('enter', function () { return getSections(elem, function (ref) {\n      var prefix = ref.prefix;\n      var selected = ref.selected;\n      var suffix = ref.suffix;\n\n      update(handler.autoIndent(prefix, selected, suffix));\n      return false\n    }); });\n  }\n\n  if (autoStrip) {\n    keys.bind('backspace', function () { return getSections(elem, function (ref, selection) {\n      var prefix = ref.prefix;\n      var selected = ref.selected;\n      var suffix = ref.suffix;\n\n      if (selection.isCollapsed && handler.testAutoStrip(pairs, prefix, selected, suffix)) {\n        update(handler.autoStrip(prefix, selected, suffix));\n        return false\n      }\n    }); });\n  }\n\n  var fnAutoOpen = function (opening, closing) { return function () { return getSections(elem, function (ref) {\n    var prefix = ref.prefix;\n    var selected = ref.selected;\n    var suffix = ref.suffix;\n\n    update(handler.autoOpen(opening, closing, prefix, selected, suffix));\n    return false\n  }); }; };\n\n  var fnOverwrite = function (closing) { return function () { return getSections(elem, function (ref, selection) {\n    var prefix = ref.prefix;\n    var selected = ref.selected;\n    var suffix = ref.suffix;\n\n    if (selection.isCollapsed && handler.testOverwrite(closing, prefix, selected, suffix)) {\n      update(handler.overwrite(closing, prefix, selected, suffix));\n      return false\n    }\n  }); }; };\n\n  pairs.forEach(function (ref) {\n    var opening = ref[0];\n    var closing = ref[1];\n\n    if (closing) {\n      if (autoOpen){ keys.bind(opening, fnAutoOpen(opening, closing)); }\n      if (overwrite) { keys.bind(closing, fnOverwrite(closing)); }\n    } else {\n      if (autoOpen && overwrite) {\n        keys.bind(opening, function () { return getSections(elem, function (ref, selection) {\n          var prefix = ref.prefix;\n          var selected = ref.selected;\n          var suffix = ref.suffix;\n\n          if (selection.isCollapsed && handler.testOverwrite(opening, prefix, selected, suffix))\n            { update(handler.overwrite(opening, prefix, selected, suffix)); }\n          else\n            { update(handler.autoOpen(opening, opening, prefix, selected, suffix)); }\n          return false\n        }); });\n      } else {\n        if (autoOpen){ keys.bind(opening, fnAutoOpen(opening, opening)); }\n        if (overwrite) { keys.bind(opening, fnOverwrite(opening)); }\n      }\n    }\n  });\n\n  if (replaceTab) {\n    keys.bind('tab', function () { return getSections(elem, function (ref) {\n      var prefix = ref.prefix;\n      var selected = ref.selected;\n      var suffix = ref.suffix;\n\n      update(handler.tabIndent(prefix, selected, suffix));\n      return false\n    }); });\n\n    keys.bind('shift+tab', function () { return getSections(elem, function (ref) {\n      var prefix = ref.prefix;\n      var selected = ref.selected;\n      var suffix = ref.suffix;\n\n      update(handler.tabUnindent(prefix, selected, suffix));\n      return false\n    }); });\n  }\n\n  editable.inputListener = elem.addEventListener('input', function () { return getSections(elem, update); });\n\n  oninput(elem.textContent, store());\n\n  // expose for haxxoers\n  editable.elem = elem;\n  editable.handler = handler;\n  editable.undoMgr = undoMgr;\n  editable.store = store;\n  editable.setDom = setDom;\n  editable.update = update;\n  editable.keys = keys;\n};\n\nEditable.prototype.destroy = function destroy () {\n  this.elem.removeEventListener('input', this.inputListener);\n  this.keys.detach();\n  this.undoMgr.clear();\n};\n\nEditable.prototype.focus = function focus () {\n  this.elem.focus();\n};\n\nEditable.prototype.blur = function blur () {\n  this.elem.blur();\n};\n\nfunction store(value) {\n  function gettersetter() {\n    if (arguments.length) {\n      value = arguments[0];\n    }\n    return value\n  }\n  return gettersetter\n}\n\nvar autoIndent = function (newLine, tab, prefix, selected, suffix) {\n  var prevLine = prefix.split(onNewLine).splice(-1)[0];\n  var prefEnd = prefix.slice(-1);\n  var suffStart = suffix.charAt(0);\n\n  if ((prevLine.match(/\\(/g) || []).length > (prevLine.match(/\\)/g) || []).length) {\n    var whitespace = prevLine.match(leadingWhitespace)[0];\n    prefix += newLine + whitespace + prevLine.slice(whitespace.length, prevLine.lastIndexOf('(') + 1).replace(allCharacters, ' ');\n  } else if (prefEnd === '{') {\n    prefix += newLine + prevLine.match(leadingWhitespace)[0] + tab;\n    if (suffStart === '}')\n      { suffix = newLine + prevLine.match(leadingWhitespace)[0] + suffix; }\n  } else {\n    prefix += newLine + prevLine.match(leadingWhitespace)[0];\n  }\n  selected = '';\n  if (suffix === '') { suffix = newLine; }\n  return { prefix: prefix, selected: selected, suffix: suffix }\n};\n\nvar autoOpen = function (opening, closing, prefix, selected, suffix) {\n  prefix += opening;\n  suffix = closing + suffix;\n  return { prefix: prefix, selected: selected, suffix: suffix }\n};\n\nvar autoStrip = function (prefix, selected, suffix) {\n  prefix = prefix.slice(0, -1);\n  suffix = suffix.slice(1);\n  return { prefix: prefix, selected: selected, suffix: suffix }\n};\n\n// content in selection is handled in index.js\nvar testAutoStrip = function (pairs, prefix, selected, suffix) {\n  var result = false;\n  pairs.forEach(function (ref) {\n    var opening = ref[0];\n    var closing = ref[1];\n\n    closing = closing ? closing : opening;\n    if (prefix.slice(-1) === opening && suffix.charAt(0) === closing) { result = true; }\n  });\n  return result\n};\n\nvar overwrite = function (closing, prefix, selected, suffix) {\n  prefix += closing;\n  suffix = suffix.slice(1);\n  return { prefix: prefix, selected: selected, suffix: suffix }\n};\n\n// content in selection is handled in index.js\nvar testOverwrite = function (closing, prefix, selected, suffix) {\n  return suffix.charAt(0) === closing\n};\n\nvar tabIndent = function (newLine, tab, prefix, selected, suffix) {\n  var prefLines = prefix.split(onNewLine);\n  var prevLine = prefLines.splice(-1)[0];\n\n  if (selected === '') {\n    if (tab === '\\t' || prevLine.length % tab.length === 0) {\n      prefix += tab;\n    } else {\n      prefix += ' '.repeat(tab.length - prevLine.length % tab.length);\n    }\n  } else {\n    prevLine = tab + prevLine;\n    prefix = prefLines.concat(prevLine).join(newLine);\n    selected = selected.replace(allNewLines, newLine + tab);\n  }\n  return { prefix: prefix, selected: selected, suffix: suffix }\n};\n\nvar tabUnindent = function (newLine, tab, prefix, selected, suffix) {\n  var lines = selected.split(onNewLine);\n  var prevLine = prefix.split(onNewLine).splice(-1)[0];\n\n  if (lines.length === 1) {\n    if (prefix.endsWith(tab))\n      { prefix = prefix.slice(0, -tab.length); }\n    else { // indent instead\n      if (tab === '\\t' || prevLine.length % tab.length === 0) {\n        prefix += tab;\n      } else {\n        prefix += ' '.repeat(tab.length - prevLine.length % tab.length);\n      }\n    }\n  } else {\n    var prevLength = prevLine.length;\n    if (prevLength) {\n      prevLine = removeIfStartsWith(tab)(prevLine);\n      prefix = prefix.slice(0, -prevLength) + prevLine;\n    }\n    lines = lines.map(removeIfStartsWith(tab));\n    selected = lines.join(newLine);\n  }\n  return { prefix: prefix, selected: selected, suffix: suffix }\n};\n\nfunction StrUtil(newLine, tab) {\n  return {\n    autoIndent    : function () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return autoIndent.apply(void 0, [ newLine, tab ].concat( args ));\n  },\n    autoOpen      : autoOpen,\n    autoStrip     : autoStrip,\n    testAutoStrip : testAutoStrip,\n    overwrite     : overwrite,\n    testOverwrite : testOverwrite,\n    tabIndent     : function () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return tabIndent.apply(void 0, [ newLine, tab ].concat( args ));\n  },\n    tabUnindent   : function () {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return tabUnindent.apply(void 0, [ newLine, tab ].concat( args ));\n  }\n  }\n}\n\nvar Misbehave = (function (Editable$$1) {\n  function Misbehave(elem, opts) {\n    if ( opts === void 0 ) opts = {};\n\n    if (typeof opts.store === 'undefined') { opts.store = store(getSections(elem)); }\n    if (typeof opts.behavior === 'undefined') { opts.behavior = StrUtil; }\n\n    Editable$$1.call(this, elem, opts);\n  }\n\n  if ( Editable$$1 ) Misbehave.__proto__ = Editable$$1;\n  Misbehave.prototype = Object.create( Editable$$1 && Editable$$1.prototype );\n  Misbehave.prototype.constructor = Misbehave;\n\n  return Misbehave;\n}(Editable));\n\nreturn Misbehave;\n\n})));\n","var _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function(){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\nvar _ = _self.Prism = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function (tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\n\t\t\t\treturn tokens.map(_.util.encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function (o, visited) {\n\t\t\tvar type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = {};\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tif (visited[_.util.objId(o)]) {\n\t\t\t\t\t\treturn visited[_.util.objId(o)];\n\t\t\t\t\t}\n\t\t\t\t\tvar clone = [];\n\t\t\t\t\tvisited[_.util.objId(o)] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = _.util.clone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\t\t\t}\n\n\t\t\treturn o;\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need anobject and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\n\t\t\tif (arguments.length == 2) {\n\t\t\t\tinsert = arguments[1];\n\n\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn grammar;\n\t\t\t}\n\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\n\t\t\t\t\t\tfor (var newToken in insert) {\n\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === root[inside] && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn root[inside] = ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run(\"before-highlightall\", env);\n\n\t\tvar elements = env.elements || container.querySelectorAll(env.selector);\n\n\t\tfor (var i=0, element; element = elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language, grammar, parent = element;\n\n\t\twhile (parent && !lang.test(parent.className)) {\n\t\t\tparent = parent.parentNode;\n\t\t}\n\n\t\tif (parent) {\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\n\t\t\tgrammar = _.languages[language];\n\t\t}\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\tif (element.parentNode) {\n\t\t\t// Set language on the parent, for styling\n\t\t\tparent = element.parentNode;\n\n\t\t\tif (/pre/i.test(parent.nodeName)) {\n\t\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t\t}\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code || !env.grammar) {\n\t\t\tif (env.code) {\n\t\t\t\t_.hooks.run('before-highlight', env);\n\t\t\t\tenv.element.textContent = env.code;\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t}\n\t\t\t_.hooks.run('complete', env);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tenv.highlightedCode = evt.data;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\tcallback && callback.call(element);\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\tmatchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {\n\t\tvar Token = _.Token;\n\n\t\tfor (var token in grammar) {\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (token == target) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tvar pattern = patterns[j],\n\t\t\t\t\tinside = pattern.inside,\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\t\tlookbehindLength = 0,\n\t\t\t\t\talias = pattern.alias;\n\n\t\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\n\t\t\t\t}\n\n\t\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\t\t// Don’t cache length as it changes during the loop\n\t\t\t\tfor (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {\n\n\t\t\t\t\tvar str = strarr[i];\n\n\t\t\t\t\tif (strarr.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (greedy && i != strarr.length - 1) {\n\t\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\n\t\t\t\t\t\t    to = match.index + match[0].length,\n\t\t\t\t\t\t    k = i,\n\t\t\t\t\t\t    p = pos;\n\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {\n\t\t\t\t\t\t\tp += strarr[k].length;\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\n\t\t\t\t\t\t\tif (from >= p) {\n\t\t\t\t\t\t\t\t++i;\n\t\t\t\t\t\t\t\tpos = p;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// If strarr[i] is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (strarr[i] instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\n\t\t\t\t\t\tdelNum = k - i;\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\t\tvar match = pattern.exec(str),\n\t\t\t\t\t\t\tdelNum = 1;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif(lookbehind) {\n\t\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\n\t\t\t\t\t    to = from + match.length,\n\t\t\t\t\t    before = str.slice(0, from),\n\t\t\t\t\t    after = str.slice(to);\n\n\t\t\t\t\tvar args = [i, delNum];\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\t++i;\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t\targs.push(before);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\n\n\t\t\t\t\targs.push(wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\targs.push(after);\n\t\t\t\t\t}\n\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\n\n\t\t\t\t\tif (delNum != 1)\n\t\t\t\t\t\t_.matchGrammar(text, strarr, grammar, i, pos, true, token);\n\n\t\t\t\t\tif (oneshot)\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\ttokenize: function(text, grammar, language) {\n\t\tvar strarr = [text];\n\n\t\tvar rest = grammar.rest;\n\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\t_.matchGrammar(text, strarr, grammar, 0, 0, false);\n\n\t\treturn strarr;\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || \"\").length|0;\n\tthis.greedy = !!greedy;\n};\n\nToken.stringify = function(o, language, parent) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\n\tif (_.util.type(o) === 'Array') {\n\t\treturn o.map(function(element) {\n\t\t\treturn Token.stringify(element, language, o);\n\t\t}).join('');\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: Token.stringify(o.content, language, parent),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language,\n\t\tparent: parent\n\t};\n\n\tif (o.alias) {\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\n\t\tArray.prototype.push.apply(env.classes, aliases);\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = Object.keys(env.attributes).map(function(name) {\n\t\treturn name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}).join(' ');\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\n\n};\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _self.Prism;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _self.Prism;\n}\n\n//Get current script and highlight\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (!_.manual && !script.hasAttribute('data-manual')) {\n\t\tif(document.readyState !== \"loading\") {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\n\t\t}\n\t}\n}\n\nreturn _self.Prism;\n\n})();\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n","Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\tpunctuation: /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /[a-z0-9_]+(?=\\()/i,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'keyword': /\\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\n\t'number': /\\b(?:0[xX][\\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*\\()/i,\n\t'operator': /-[-=]?|\\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\\|[|=]?|\\*\\*?=?|\\/=?|~|\\^=?|%=?|\\?|\\.{3}/\n});\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(\\[[^\\]\\r\\n]+]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})\\]]))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)|[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/i,\n\t\talias: 'function'\n\t},\n\t'constant': /\\b[A-Z][A-Z\\d_]*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${[^}]+}|[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /\\${[^}]+}/,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: null // See below\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\nPrism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;\n\nif (Prism.languages.markup) {\n\tPrism.languages.insertBefore('markup', 'tag', {\n\t\t'script': {\n\t\t\tpattern: /(<script[\\s\\S]*?>)[\\s\\S]*?(?=<\\/script>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript,\n\t\t\talias: 'language-javascript',\n\t\t\tgreedy: true\n\t\t}\n\t});\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","export const getElement = (htmlMarkup) => {\n  const div = document.createElement(`div`);\n  div.innerHTML = htmlMarkup;\n  return div.firstElementChild;\n};\n\nexport const mergeParams = (mergeWith, configs) => {\n  return mergeWith({}, ...configs.slice(), (objValue, srcValue) => {\n    if (Array.isArray(objValue)) {\n      return objValue.concat(srcValue);\n    }\n    return void 0;\n  });\n};\n\nexport const checkObjectisPrototype = (obj) => {\n  return obj && Object.prototype.hasOwnProperty.call(obj, `constructor`) &&\n    typeof obj.constructor === `function` &&\n    Object.prototype.hasOwnProperty.call(obj.constructor, `prototype`) &&\n    typeof obj.constructor.prototype === `object` &&\n    obj.constructor.prototype === obj;\n};\n\nexport const checkEnumContainsValue = (enumerable, value) => {\n  return !!Object.entries(enumerable).find((entry) => entry[1] === value);\n};\n\nexport const escapeHTML = (htmlMarkup) => {\n  return htmlMarkup\n      .replace(/&/g, `&amp;`)\n      .replace(/</g, `&lt;`)\n      .replace(/>/g, `&gt;`)\n      .replace(/\"/g, `&quot;`)\n      .replace(/'/g, `&#039;`);\n};\n","import {getElement} from './utils';\n\nexport default class AbstractView {\n  constructor() {}\n\n  /**\n   * @abstract\n   * @return {string}\n   */\n  get template() {}\n\n  /**\n   * @return {HTMLElement}\n   */\n  get el() {\n    if (!this._el) {\n      this._el = this._render();\n      this._bind(this._el);\n    }\n    return this._el;\n  }\n\n  /**\n   * Renders element from this.template\n   * @private\n   * @return {HTMLElement}\n   */\n  _render() {\n    return getElement(this.template);\n  }\n\n  /**\n   * Method to work with element after render\n   * @protected\n   */\n  _bind() {}\n}\n","import Misbehave from 'misbehave';\nimport Prism from 'prismjs';\nimport AbstractView from '../abstract-view';\n\nconst emtyRE = /^\\n{0,2}$/;\n\nexport default class PromptView extends AbstractView {\n  constructor(isMobile) {\n    super();\n    this._isMobile = isMobile;\n  }\n\n  get template() {\n    return `\\\n<div class=\"prompt\">\n  <div class=\"prompt__line-arrow\"></div>\n  <code class=\"prompt__input\" contenteditable=\"true\" autocapitalize=\"none\" autocorrect=\"off\" spellcheck=\"false\" tabindex=\"0\" role=\"textbox\" aria-multiline=\"true\"></code>\n  <a class=\"prompt__send-btn\" aria-label=\"Выполнить\">\n    <svg class=\"prompt__send-icon send-icon send-icon--grey\" xmlns=\"http://www.w3.org/2000/svg\" viewbox=\"0 0 100 100\">\n      <circle class=\"send-icon__circle\" r=\"50%\" cx=\"50%\" cy=\"50%\" />\n      <polyline points=\"55, 30 75, 50 55, 70\" fill=\"none\" stroke-width=\"7\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n      <line x1=\"25\" y1=\"50\" x2=\"75\" y2=\"50\" stroke-width=\"7\" stroke-linecap=\"round\" />\n    </svg>\n  </a>\n  <div class=\"prompt__scripts\"></div>\n</div>`;\n  }\n\n  _bind() {\n    this._text = ``;\n    this._allowSend = false;\n    this._scriptsEl = this.el.querySelector(`.prompt__scripts`);\n    this._inputEl = this.el.querySelector(`.prompt__input`);\n    this._sendBtnEl = this.el.querySelector(`.prompt__send-btn`);\n\n    this._sendBtnEl.addEventListener(`click`, this._handleSendClick.bind(this));\n    this._inputEl.addEventListener(`keydown`, this._handleKeyDown.bind(this));\n    this._sendBtnEl.addEventListener(`mousedown`, this._handleMouseDown.bind(this));\n    this.editor = new Misbehave(this._inputEl, {\n      oninput: this._handleMisbehaveInput.bind(this)\n    });\n  }\n\n  get height() {\n    return this._el.offsetHeight;\n  }\n\n  _handleMisbehaveInput(text) {\n    if (emtyRE.test(text)) {\n      this._inputEl.innerText = ``;\n    } else {\n      this._inputEl.innerHTML = Prism.highlight(text, Prism.languages.javascript);\n    }\n  }\n\n  _handleKeyDown(evt) {\n    if (!this._isMobile && !evt.shiftKey && evt.key === `Enter`) {\n      this._send();\n    }\n  }\n\n  _handleSendClick() {\n    this._send();\n  }\n\n  _handleMouseDown(evt) {\n    evt.preventDefault();\n  }\n\n  _send() {\n    if (this._inputEl.innerText) {\n      this.onSend(this._inputEl.innerText, this._inputEl.innerHTML);\n      this._inputEl.innerText = ``;\n    }\n  }\n\n  onSend() {}\n\n  createScriptFromCodeAndAppend(code, cb = () => {}) {\n    const script = document.createElement(`script`);\n    const blob = new Blob([code], {\n      type: `application/javascript`,\n    });\n    script.src = URL.createObjectURL(blob);\n    script.onload = () => {\n      this._scriptsEl.removeChild(script);\n      cb();\n    };\n    this._scriptsEl.appendChild(script);\n  }\n}\n","/* eslint no-eval: \"off\" */\nimport acorn from 'acorn/dist/acorn';\nimport PromptView from './prompt-view';\n\nexport default class Prompt {\n  constructor(container, consoleGlobalName, params = {}) {\n    if (!container) {\n      throw new Error(`Prompt is not inited!`);\n    } else if (!(container instanceof HTMLElement)) {\n      throw new TypeError(`HTML element must be passed as container`);\n    }\n    this._container = container;\n    this._consGlobalName = consoleGlobalName;\n    this._isMobile = /iPhone|iPad|iPod|Android/i.test(window.navigator.userAgent);\n    this._view = new PromptView(this._isMobile);\n    this._view.onSend = this._handleSend.bind(this);\n    this._container.appendChild(this._view.el);\n\n    this._params = params;\n  }\n\n  get viewHeight() {\n    return this._view.height;\n  }\n\n  _handleSend(code, highlightedMarkup) {\n    const ast = acorn.parse(code);\n    const body = ast.body;\n    let l = body.length;\n    let lastExpressionStatementNode;\n    while (l--) {\n      const node = body[l];\n      if (node.type === `ExpressionStatement`) {\n        lastExpressionStatementNode = node;\n        break;\n      }\n    }\n\n    let editedCode;\n    if (lastExpressionStatementNode) {\n      const expression = lastExpressionStatementNode.expression;\n      const leftStrPart = code.substring(0, expression.start);\n      const rightStrPart = code.substring(expression.end, code.length);\n      const exprStrPart = code.substring(expression.start, expression.end);\n\n      editedCode = `${leftStrPart};${this._consGlobalName}.logOutput(${exprStrPart});${rightStrPart}`;\n    } else {\n      editedCode = `${code};${this._consGlobalName}.logOutput(void 0);`;\n    }\n    window[this._consGlobalName].prompt(highlightedMarkup);\n    this._view.createScriptFromCodeAndAppend(editedCode);\n  }\n}\n","// import '@babel/polyfill';\nimport Prompt from './prompt/prompt';\n\nwindow.Prompt = Prompt;\n"]}